此部分对 Common Lisp 的一些具体部分进行更加深入的讨论，主题包括：FORMAT 函数，状况系统，特殊操作符，包的使用，以及 LOOP 宏的使用。

1. FORMAT 函数：书中介绍一部分，主要作用是生成可读输出。
	有两个必要参数，一个是输出的地方，一个是格式化参数的字符串。

	第一个参数有四种情况：
		T，是流 *STANDARD-OUTPUT* 的简称，返回 NIL
		一个流，放入流中，返回 NIL
		带填充指针的字符串，放在字符串最后，返回 NIL
		NIL , 会返回生成的字符串
	
	第二个参数由 FORMAT 语言写成，就是带指令的字符串。
		指令包括 ~ ，前置参数，字符
			书中指令可以分为四类：
			a. 例如：(format t "~5$" pi)  打印 3.14159
				~D 十进制整数 前置 : 三位一个逗号，美观打印，@ 正整数
				~O 八进制整数 ~B 二进制整数
				~R 任意进制整数，参数 2~36，不作为进制数打印，就打印为基数词，：序数词，@ 罗马数字
				~F ~E ~G ~$  浮点数
				~A 任何类型，不带引用标记
				~S 任何类型，带上引用标记，可以被读取。
				~C 字符
				~% 换行 ~& 新行 ~~ 波浪线 
			b. 例如：(format t "~[ cero ~; uno ~; dow ~]" 0) 打印cero
				~[ 与 ~] 组合使用，~; 分隔，如果没有选择，则使用 ~:; 默认打印
			c. 例如：(format t "~{~a~^,~}" '(1 2 3)) 打印 "1,2,3"
				~{ 与 ~} 组合使用，在列表上迭代
			d. ~* 在参数里跳跃，具体见书(过于复杂，就像乱码)
      
		指令还有更多，可以做具体研究。

2. Common Lisp 的状况系统

3. Common Lisp 的 25 个特殊操作符

4. 包与符号

5. LOOP 宏
