第八章 自定义宏

1. 宏的本质就是将反复出现的代码抽象出来的一种手段，宏会生成特定代码，称为宏展开，再执行。
              
2. 定义宏：
    (defmacro name (parameter*)
        "optional documentation string"
        body-form*)
        
    首先，编写出宏调用的代码和应当生成的代码
    其次，写出宏代码，调试运行
    最后，修改代码，确保宏没有泄露实现细节  
    
    示例：do-primes 宏，具体代码见 pclp-8.lisp
    
        注意：1.从具体代码提取出公共模式，编写宏
             2.定义宏形参，自动解构
             3.反引号拼凑列表，逗号带入，@ 符号拼凑出列表
             4.注意宏的 Leaky Abstractions 问题，注意过多的参数求值，求值顺序问题，参数名问题（使用 GENSYM 函数）
             5.宏还可以产生宏

3. 这些编写出的宏还是简单宏，还没有从不同的角度提高语言的表达力，之后还要继续学习，还可以参考 《On Lisp》
